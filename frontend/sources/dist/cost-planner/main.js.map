{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/classes/accountEntity.ts","webpack:///./src/app/constants/http-constant.ts","webpack:///./src/app/constants/route-constant.ts","webpack:///./src/app/guards/permission.guard.ts","webpack:///./src/app/services/app-account-context-service/app-account-context.service.ts","webpack:///./src/app/services/app-route-service/app-route.service.ts","webpack:///./src/app/services/auth-service/auth-service-impl.service.ts","webpack:///./src/app/services/main-side-nav-service/main-side-nav.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./modules/auth/auth.module\": [\n\t\t\"./src/app/modules/auth/auth.module.ts\",\n\t\t\"modules-auth-auth-module\"\n\t],\n\t\"./modules/dashbord/dashbord.module\": [\n\t\t\"./src/app/modules/dashbord/dashbord.module.ts\",\n\t\t\"modules-dashbord-dashbord-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PermissionGuard } from './guards/permission.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'auth', pathMatch: 'full' },\n  { path: 'auth', loadChildren: './modules/auth/auth.module#AuthModule' },\n  {\n    path: 'dashbord', loadChildren: './modules/dashbord/dashbord.module#DashbordModule', canActivate: [PermissionGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { enableTracing: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div class=\\\"main-page\\\">\\n    <div class=\\\"header\\\">\\n        <router-outlet name=\\\"headerOutlet\\\"></router-outlet>\\n    </div>\\n    <div class=\\\"main\\\">\\n        <div [hidden]=\\\"appAccountContextService.getAccount().$authtorised\\\" class=\\\"experimental\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n        <mat-sidenav-container [hidden]=\\\"!appAccountContextService.getAccount().$authtorised\\\">\\n            <mat-sidenav #sidenav class=\\\"example-sidenav\\\">\\n                <p class=\\\"main-menu-caption\\\">Main menu</p>\\n            </mat-sidenav>\\n            <mat-sidenav-content>\\n                <div class=\\\"content\\\">\\n                    <router-outlet name=\\\"content\\\"></router-outlet>\\n                </div>\\n            </mat-sidenav-content>\\n        </mat-sidenav-container>\\n    </div>\\n    <div class=\\\"footer\\\">\\n        <router-outlet name=\\\"footerOutlet\\\"></router-outlet>\\n    </div>\\n</div>\"","module.exports = \".main {\\n  height: 85%;\\n  display: flex; }\\n\\n.header, .footer {\\n  height: 7.5%; }\\n\\n.experimental, .mat-sidenav-container, .content {\\n  width: 100%;\\n  height: 100%; }\\n\\n.mat-drawer-content {\\n  position: relative;\\n  z-index: 1;\\n  display: block;\\n  height: 100%;\\n  overflow: auto;\\n  display: flex; }\\n\\n.content {\\n  width: 100%;\\n  height: 100%;\\n  display: inline-block;\\n  position: relative;\\n  padding: 0px 50px 0px 50px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3JvbWFuL3JlcG9zaXRvcnkvQW5ndWxhci9jb3N0LXBsYW5uZXIvc3JjL2FwcC9hcHAuY29tcG9uZW50LnNhc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSxZQUFXO0VBQ1gsY0FBYSxFQUFHOztBQUVsQjtFQUNFLGFBQVksRUFBRzs7QUFFakI7RUFDRSxZQUFXO0VBQ1gsYUFBWSxFQUFHOztBQUVqQjtFQUNFLG1CQUFrQjtFQUNsQixXQUFVO0VBQ1YsZUFBYztFQUNkLGFBQVk7RUFDWixlQUFjO0VBQ2QsY0FBYSxFQUFHOztBQUVsQjtFQUNFLFlBQVc7RUFDWCxhQUFZO0VBQ1osc0JBQXFCO0VBQ3JCLG1CQUFrQjtFQUNsQiwyQkFBMEIsRUFBRyIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2FzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLm1haW4ge1xuICBoZWlnaHQ6IDg1JTtcbiAgZGlzcGxheTogZmxleDsgfVxuXG4uaGVhZGVyLCAuZm9vdGVyIHtcbiAgaGVpZ2h0OiA3LjUlOyB9XG5cbi5leHBlcmltZW50YWwsIC5tYXQtc2lkZW5hdi1jb250YWluZXIsIC5jb250ZW50IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTsgfVxuXG4ubWF0LWRyYXdlci1jb250ZW50IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAxMDAlO1xuICBvdmVyZmxvdzogYXV0bztcbiAgZGlzcGxheTogZmxleDsgfVxuXG4uY29udGVudCB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nOiAwcHggNTBweCAwcHggNTBweDsgfVxuIl19 */\"","import { AppAccountContextService } from './services/app-account-context-service/app-account-context.service';\nimport { Component, OnInit, ViewChild, ViewChildren } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { MainSideNavService } from './services/main-side-nav-service/main-side-nav.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'cost-planner';\n\n  @ViewChild(MatSidenav)\n  private drawer: MatSidenav;\n\n  constructor(private sideNavService: MainSideNavService,\n    private appAccountContextService: AppAccountContextService) {\n  }\n\n  ngOnInit() {\n    this.sideNavService.setDriwer(this.drawer);\n  }\n}\n","import { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule, MatSidenavModule, MatButtonModule, MatCardModule, MatIconModule } from '@angular/material';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatCardModule,\n    MatIconModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Account } from './../interfaces/account';\n\n/**\n * Класс - описывающий данные учетной записи\n */\nexport class AccountEntity {\n\n    private id: number = null;\n    private login: string = '';\n    private password: string = '';\n    private authtorised: boolean = false;\n    private nickName: string = '';\n\n    constructor(obj?: any) {\n        this.id = obj && obj.id;\n        this.login = obj && obj.login;\n        this.password = obj && obj.password;\n        this.authtorised = obj && obj.authtorised;\n    }\n\n\n    /**\n     * Getter $id\n     * @return {number }\n     */\n    public get $id(): number {\n        return this.id;\n    }\n\n    /**\n     * Getter $login\n     * @return {string }\n     */\n    public get $login(): string {\n        return this.login;\n    }\n\n    /**\n     * Getter $password\n     * @return {string }\n     */\n    public get $password(): string {\n        return this.password;\n    }\n\n    /**\n     * Getter $isAuthtorise\n     * @return {boolean }\n     */\n    public get $authtorised(): boolean {\n        return this.authtorised;\n    }\n\n    /**\n     * Getter $nickName\n     * @return {string }\n     */\n    public get $nickName(): string {\n        return this.nickName;\n    }\n\n    /**\n     * Setter $id\n     * @param {number } value\n     */\n    public set $id(value: number) {\n        this.id = value;\n    }\n\n    /**\n     * Setter $login\n     * @param {string } value\n     */\n    public set $login(value: string) {\n        this.login = value;\n    }\n\n    /**\n     * Setter $password\n     * @param {string } value\n     */\n    public set $password(value: string) {\n        this.password = value;\n    }\n\n    /**\n     * Setter $isAuthtorise\n     * @param {boolean } value\n     */\n    public set $authtorised(value: boolean) {\n        this.authtorised = value;\n    }\n\n    /**\n     * Setter $nickName\n     * @param {string } value\n     */\n    public set $nickName(value: string) {\n        this.nickName = value;\n    }\n\n\n}\n","import { HttpHeaders } from '@angular/common/http';\n\n\n/**\n * Класс-константа для Http-сервиса\n */\nexport class HttpConstant {\n\n    public static HTTP_OPTIONS = {\n        headers: new HttpHeaders({\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT',\n            'Access-Control-Allow-Origin': '*'\n        })\n    };\n\n}\n","\n/**\n * Константы для роутинга запросов\n */\nexport class RouteConstant {\n    // запросы к модулю авторизации, регистрации, логину и т.д.\n    public static readonly auth_location = 'http://localhost:8081/auth';\n    // главная страница, при авторизованном пользователе\n    public static readonly dash_location = 'http://localhost:8081/dashbord';\n}\n","import { AccountEntity } from './../classes/accountEntity';\nimport { AppRouteService } from './../services/app-route-service/app-route.service';\nimport { AppAccountContextService } from './../services/app-account-context-service/app-account-context.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PermissionGuard implements CanActivate {\n  constructor(private appAccountContextService: AppAccountContextService,\n    private appRouter: AppRouteService) { }\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    const account: AccountEntity = this.appAccountContextService.getAccount();\n    debugger;\n    if (!account || !account.$authtorised) {\n      return false;\n    }\n\n    return account.$authtorised;\n  }\n}\n","import { AuthServiceImpl } from './../auth-service/auth-service-impl.service';\nimport { AppRouteService } from './../app-route-service/app-route.service';\nimport { AccountEntity } from './../../classes/accountEntity';\nimport { Injectable } from '@angular/core';\nimport { SimpleResult } from 'src/app/utils/simple-result.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppAccountContextService {\n\n  // сущность на контекст приложения\n  private _account: AccountEntity = new AccountEntity();\n\n  constructor(private _authService: AuthServiceImpl,\n    private temp: AppRouteService) {\n  }\n\n  regitry() {\n    this._authService.registry(this._account)\n      .subscribe((simpleResult: SimpleResult<AccountEntity>) => (simpleResult && simpleResult.result) ?\n        this._account = new AccountEntity(simpleResult.result) : new AccountEntity());\n  }\n\n  login() {\n    this._authService.signIn(this._account)\n      .subscribe((simpleResult: SimpleResult<AccountEntity>) => {\n        const account: AccountEntity = simpleResult && simpleResult.result && new AccountEntity(simpleResult.result);\n        if (account) {\n          this._account = account;\n          this.temp.goTo('/dashbord');\n        }\n      });\n  }\n\n  logOut() {\n    this._authService.signOut(this._account)\n      .subscribe((simpleResult: SimpleResult<AccountEntity>) => {\n        this._account = (simpleResult && simpleResult.result) ? new AccountEntity(simpleResult.result) : new AccountEntity();\n        this.temp.goTo('/');\n      });\n  }\n\n  getAccount(): AccountEntity {\n    return this._account;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppRouteService {\n\n  constructor(private _router: Router) { }\n\n  /**\n   * Перейти по имени пути\n   */\n  public goTo(urlName: string, params?: any) {\n    if (urlName && urlName.length > 0) {\n      this._router.navigate([urlName], { replaceUrl: false })\n        .catch((reson: any) => console.log('Неверный url. Error = ', reson));\n    }\n  }\n}\n","import { AccountEntity } from 'src/app/classes/accountEntity';\nimport { HttpConstant } from '../../constants/http-constant';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Auth } from 'src/app/interfaces/auth';\nimport { RouteConstant } from 'src/app/constants/route-constant';\nimport { Router } from '@angular/router';\nimport { SimpleResult } from 'src/app/utils/simple-result.class';\n\n/**\n * Сервис авторизации и регистрации пользователей в системе\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceImpl implements Auth {\n\n  constructor(private _httpService: HttpClient) { }\n\n  /**\n   * Выйти из системы\n   */\n  signOut(accountEntity: AccountEntity, url?: string): Observable<SimpleResult<AccountEntity>> {\n    if (!url) {\n      url = RouteConstant.auth_location + '/logout';\n    }\n    return this._httpService.post<SimpleResult<AccountEntity>>(url, accountEntity, HttpConstant.HTTP_OPTIONS);\n  }\n\n  /**\n   * Войти в систему\n   */\n  signIn(accountEntity: AccountEntity, url?: string): Observable<SimpleResult<AccountEntity>> {\n    if (!url) {\n      url = RouteConstant.auth_location + '/login';\n    }\n    return this._httpService.post<SimpleResult<AccountEntity>>(url, JSON.stringify(accountEntity), HttpConstant.HTTP_OPTIONS);\n  }\n\n  /**\n   * Зарегистрироваться в системе\n   */\n  registry(accountEntity: AccountEntity, url?: string): Observable<SimpleResult<AccountEntity>> {\n    if (!url) {\n      url = RouteConstant.auth_location + '/registry';\n    }\n    return this._httpService.post<SimpleResult<AccountEntity>>(url, JSON.stringify(accountEntity), HttpConstant.HTTP_OPTIONS);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainSideNavService {\n\n  private drawer: MatSidenav;\n\n  constructor() { }\n\n  public getDriwer(): MatSidenav {\n    return this.drawer;\n  }\n\n  public setDriwer(drawer: MatSidenav) {\n    this.drawer = drawer;\n  }\n\n  public drawerToggle() {\n    this.drawer.toggle();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}